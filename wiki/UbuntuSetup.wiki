#summary Set by step guide to set up webvo on Ubuntu 6.10

= Introduction =

This is a step by step guide to install webvo on a fully updated fresh install of Ubuntu 6.10. If you're using a different distro then concepts in this guide should be transferable, if not the exact commands. Some familiarity with Linux is assumed and will be useful if you run into any errors not foreseen in the document. If you run into any problems please post them in the discussion forum.

= Prerequisites =

=== 1. IVTV Drivers ===
Adapted from https://help.ubuntu.com/community/Install_IVTV_Edgy

Make sure you have all the universe/metaverse repositories
{{{
~$ sudo gedit /etc/apt/sources.list
}}}
And add the following
{{{
deb http://archive.ubuntu.com/ubuntu/ edgy main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ edgy-updates main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu/ edgy-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ edgy-backports main restricted universe multiverse
}}}
Install the necessary packages
{{{
~$ sudo apt-get update
~$ sudo apt-get install ivtv-source devscripts ivtv-utils module-assistant mplayer
~$ sudo apt-get install build-essential
}}}
Add the following to /etc/apt/sources.list
{{{
deb http://dl.ivtvdriver.org/ubuntu edgy firmware
}}}
Add the key to this repository
{{{
~$ wget http://dl.ivtvdriver.org/ubuntu/80DF6D58.gpg -O- | sudo apt-key add -
}}}
Update your packages
{{{
~$ sudo apt-get update
}}}
Install the IVTV firmware
{{{
DEBIAN_FRONTEND=gnome sudo apt-get install ivtv-firmware
}}}
Install the IVTV module. Note that these commands will need to be re-run if you install a new kernel.
{{{
~$ sudo m-a update,prepare
~$ sudo m-a a-i ivtv
~$ sudo depmod -a 
~$ sudo modprobe ivtv
}}}
Add IVTV module to boot order
{{{
sudo sh -c 'echo ivtv >>/etc/modules'
}}}
=== 2. Apache ===
Install apache2
{{{
~$ sudo apt-get install apache2
}}}
Add python and ruby cgi handling to /etc/apache2/apache2.conf

Uncomment the line
{{{
#AddHandler cgi-script .cgi
}}}
and change to 
{{{
AddHandler cgi-script .cgi .py .rb
}}}
Restart apache
{{{
~$ sudo /etc/init.d/apache2 restart
}}}
=== 3. MySQL ===
Install MySQL
{{{
~$ sudo apt-get install mysql-server
}}}
Add password for root
{{{
~$ mysqladmin -u root password your-new-password
~$ sudo /etc/init.d/mysql restart
}}}
=== 4. Ruby ===
Due to various issues with versions in the Ubuntu repository, we recommend that you don't use the repositories to install ruby. The problem will probably go away with Ubuntu 7.04 which should have up to date versions of ruby-libxml (our problem child). So, if you're felling lucky and have a later version of Ubuntu (or another recent distro) try the repos, otherwise...

Install ruby rereqs
{{{
~$ sudo apt-get install zlibc zlib1g zlib1g-dev libmysqlclient15-dev
}}}
Download and untar ruby
{{{
~$ wget ftp://ftp.ruby-lang.org/pub/ruby/ruby-1.8.6.tar.gz
~$ tar xvzf ruby-1.8.6.tar.gz
}}}
Configure and compile ruby
{{{
~$ cd ruby-1.8.6/
~$ ./configure
~$ make
~$ sudo make install
}}}
Download and install ruby gems
{{{
~$ wget http://rubyforge.org/frs/download.php/17190/rubygems-0.9.2.tgz
~$ tar xvzf rubygems-0.9.2.tgz
~$ cd rubygems-0.9.2/
~$ sudo ruby setup.rb
}}}
Install libxml-ruby prereqs
{{{
~$ sudo apt-get install libxml2-dev
}}}
Install libxml-ruby
{{{
~$ gem update
~$ gem install -r libxml-ruby
}}}
Install ruby-mysql
{{{
~$ wget http://www.tmtm.org/en/ruby/mysql/ruby-mysql-0.2.6.tar.gz
~$ tar xvzf ruby-mysql-0.2.6.tar.gz
~$ cd ruby-mysql-0.2.6/
~$ sudo ruby setup.rb
}}}
=== 5. XMLTV ===
Install xmltv
{{{
~$ sudo apt-get install xmltv
}}}
You will need to sign up for xml listings at http://labs.zap2it.com. Use certificate code: 'ZYZM-TE5O-SBUT'. 

Configure xmltv. This is for North America. See the xmltv docs for configuring in other regions. You will need your zap2it username and password you just got.
{{{
~$ tv_grab_na_dd --configure
}}}

= Webvo Files =

=== 1. Location ===
(Optional) Configure apache to look outside of "/var/www". We're the directory where webvo's files will reside. If you want to put them in "/var/www" go ahead but we recommend that you put them in your home directory.

Create the public_html directory where <username> is your local user account
{{{
~$ sudo mkdir /home/public_html
~$ sudo chown <username>.<username>
}}}

Create the new file /etc/apache2/conf.d/alias and insert
{{{
Alias /webvo /home/public_html/webvo/

<Directory /home/public_html/webvo/>
  Options Indexes FollowSymLinks
  AllowOverride All
  Order allow,deny
  Allow from all
</Directory>
}}}



